{"version":3,"sources":["Components/ContactItem/Phonebook.module.css","Components/InputForm/PhonebookEditor.module.css","Components/Filter/Filter.module.css","Components/ContactItem/ContactItem.js","redux/phoneBook/phoneBookTypes.js","redux/phoneBook/selectors.js","Components/ContactList/ContactList.js","redux/phoneBook/phoneBookActions.js","Components/InputForm/InputForm.jsx","Components/Filter/Filter.jsx","Components/App.js","redux/phoneBook/phoneBookReducer.js","redux/store.js","index.js"],"names":["module","exports","ContactItem","React","memo","contact","name","number","id","onDelete","console","log","className","styles","PhonebookText","type","button","onClick","types","ADD_CONTACT","DELETE_CONTACT","FILTER_CONTACT","LOAD_CONTACTS","getContacts","filter","state","phoneBookReducer","items","toLowerCase","includes","getFilter","ContactList","dispatch","useDispatch","useSelector","contacts","handleDelete","useCallback","phoneBookTypes","payload","deleteContact","map","InputForm","useState","setName","setNumber","isExists","find","getIsContactExists","PhonebookEditor","onSubmit","e","preventDefault","toastr","warning","shortid","generate","value","onChange","target","pattern","title","required","PhonebookEditorButton","Filter","input","placeholder","filterContact","App","useEffect","loadContacts","JSON","parse","localStorage","getItem","setItem","stringify","initialState","combineReducers","action","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","options","closeButton","debug","newestOnTop","progressBar","positionClass","preventDuplicates","onclick","showDuration","hideDuration","timeOut","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","reactDOM","render","store","document","getElementById"],"mappings":"0EACAA,EAAOC,QAAU,CAAC,OAAS,0BAA0B,cAAgB,mC,mBCArED,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,sBAAwB,iD,mBCArGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,0GCiB3CC,EAfKC,IAAMC,MACzB,oBAAGC,QAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,OAAQC,EAA5B,EAA4BA,GAAMC,EAAlC,EAAkCA,SAAlC,OACCC,QAAQC,IAAI,SAAUH,IACrBF,GACA,6BACC,oBAAGM,UAAWC,IAAOC,cAArB,UACER,EADF,IACSC,EACR,wBAAQQ,KAAK,SAASH,UAAWC,IAAOG,OAAQC,QAAS,kBAAKR,EAASD,IAAvE,4BCHUU,EAPD,CACbC,YAAa,cACbC,eAAgB,iBAChBC,eAAgB,iBAChBC,cAAgB,iBCJJC,EAAc,SAAAC,GAAM,OAAI,SAAAC,GAAK,OACzCD,EACGC,EAAMC,iBAAiBC,MAAMH,QAAO,qBAAGlB,KAClCsB,cAAcC,SAASL,EAAOI,kBAEnCH,EAAMC,iBAAiBC,QAOdG,EAAY,SAAAL,GAAK,OAAIA,EAAMC,iBAAiBF,QCiB1CO,EAvBK,WACnB,IAAMC,EAAWC,cACXT,EAASU,YAAYJ,GACrBK,EAAWD,YAAYX,EAAYC,IAEnCY,EAAeC,uBACpB,SAAA7B,GAAE,OAAIwB,ECLqB,SAAAxB,GAAE,MAAK,CACnCO,KAAMuB,EAAelB,eACrBmB,QAAS/B,GDGOgC,CAAchC,MAC7B,CAACwB,IAGF,OACC,6BACEG,EAASM,KAAI,SAAApC,GAAO,OACpB,cAAC,EAAD,CAECA,QAASA,EACTI,SAAU2B,GAFL/B,EAAQG,U,0DE6CHkC,EAxDG,WACjB,IAAMV,EAAWC,cACjB,EAAwBU,mBAAS,IAAjC,mBAAOrC,EAAP,KAAasC,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOpC,EAAP,KAAesC,EAAf,KACMC,EAAWZ,YHNgB,SAAA5B,GACjC,OAAO,SAAAmB,GAAK,QACTA,EAAMC,iBAAiBC,MAAMoB,MAAK,SAAA1C,GAAO,OAAIA,EAAQC,OAASA,MGIpC0C,CAAmB1C,IAoBhD,OACC,8BACC,uBAAMM,UAAWC,IAAOoC,gBAAiBC,SApBtB,SAAAC,GDbI,IAAA9C,GCcxB8C,EAAEC,iBAEEN,GACHO,IAAOC,QAAP,kBAA0BhD,EAA1B,wBAID0B,GDrBwB3B,ECsBJ,CAClBG,GAAI+C,IAAQC,WACZlD,OACAC,UDzBkC,CACrCQ,KAAMuB,EAAenB,YACrBoB,QAASlC,KC0BRuC,EAAQ,IACRC,EAAU,MAIT,UACC,sCACA,uBACC9B,KAAK,OACLT,KAAK,OACLmD,MAAOnD,EACPoD,SAAU,SAAAP,GAAC,OAAIP,EAAQO,EAAEQ,OAAOF,QAChCG,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,IAET,wCACA,uBACC/C,KAAK,MACLT,KAAK,SACLmD,MAAOlD,EACPmD,SAAU,SAAAP,GAAC,OAAIN,EAAUM,EAAEQ,OAAOF,QAClCG,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,IAGT,wBAAQlD,UAAWC,IAAOkD,sBAAuBhD,KAAK,SAAtD,+B,iBC3BWiD,EAtBA,WACd,IAAMhC,EAAWC,cACXT,EAASU,YAAYJ,GAM3B,OACC,wBAAOlB,UAAWC,IAAOW,OAAzB,UACC,0CACA,uBACCZ,UAAWC,IAAOoD,MAClBlD,KAAK,OACLmD,YAAY,0BACZT,MAAOjC,EACPkC,SAZkB,SAAAP,GACpBnB,EFD2B,SAAAR,GAAM,MAAK,CACvCT,KAAMuB,EAAejB,eACrBkB,QAASf,GEDC2C,CAAchB,EAAEQ,OAAOF,eCkBnBW,EAtBH,WACX,IAAMpC,EAAWC,cACXE,EAAWD,YAAYX,KAU7B,OARA8C,qBAAU,WACTrC,EHG0B,SAAAG,GAAQ,MAAK,CACxCpB,KAAMuB,EAAehB,cACrBiB,QAASJ,GGLCmC,CAAaC,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,OACpE,IAEHL,qBAAU,WACTI,aAAaE,QAAQ,WAAYJ,KAAKK,UAAUzC,GAAW,CAACA,OAI5D,gCACC,2CACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,eCxBG0C,EAAe,CACpBlD,MAAO,GACPH,OAAQ,IA4BMsD,cAAgB,CAAEnD,MAzBnB,WAAyC,IAAxCF,EAAuC,uDAA/BoD,EAAalD,MAAOoD,EAAW,uCACrD,OAAQA,EAAOhE,MACd,KAAKuB,EAAenB,YACnB,MAAM,GAAN,mBAAWM,GAAX,CAAkBsD,EAAOxC,UAE1B,KAAKD,EAAelB,eACnB,OAAOK,EAAMD,QAAO,SAAAnB,GAAO,OAAIA,EAAQG,KAAOuE,EAAOxC,WACtD,KAAKD,EAAehB,cACnB,OAAOyD,EAAOxC,QAEf,QACC,OAAOd,IAc8BD,OAVzB,WAA0C,IAAzCC,EAAwC,uDAAhCoD,EAAarD,OAAQuD,EAAW,uCACvD,OAAQA,EAAOhE,OACTuB,EAAejB,eACZ0D,EAAOxC,QAGPd,KCzBKuD,cACdF,YAAgB,CACfpD,qBAEDuD,OAAOC,8BAAgCD,OAAOC,gC,MCA/C7B,IAAO8B,QAAU,CAChBC,aAAa,EACbC,OAAO,EACPC,aAAa,EACbC,aAAa,EACbC,cAAe,kBACfC,mBAAmB,EACnBC,QAAS,KACTC,aAAc,MACdC,aAAc,OACdC,QAAS,OACTC,gBAAiB,OACjBC,WAAY,QACZC,WAAY,SACZC,WAAY,SACZC,WAAY,WAEbC,IAASC,OACR,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.e17de06a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Phonebook_button__3Ks78\",\"PhonebookText\":\"Phonebook_PhonebookText__1GQCr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PhonebookEditor\":\"PhonebookEditor_PhonebookEditor__22oTt\",\"PhonebookEditorButton\":\"PhonebookEditor_PhonebookEditorButton__1rcqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3bmqf\",\"input\":\"Filter_input__12Sh9\"};","import styles from './Phonebook.module.css';\r\nimport React from 'react';\r\n\r\nconst ContactItem = React.memo(\r\n\t({ contact: { name, number, id }, onDelete }) =>\r\n\t\tconsole.log('render', id) ||\r\n\t\t(name  && (\r\n\t\t\t<li>\r\n\t\t\t\t<p className={styles.PhonebookText}>\r\n\t\t\t\t\t{name} {number}\r\n\t\t\t\t\t<button type='button' className={styles.button} onClick={() =>onDelete(id)}>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</p>\r\n\t\t\t</li>\r\n\t\t))\r\n);\r\n\r\nexport default ContactItem;\r\n","const types = {\r\n\tADD_CONTACT: 'ADD_CONTACT',\r\n\tDELETE_CONTACT: 'DELETE_CONTACT',\r\n\tFILTER_CONTACT: 'FILTER_CONTACT',\r\n\tLOAD_CONTACTS : 'LOAD_CONTACTS'\r\n};\r\n\r\nexport default types;\r\n","export const getContacts = filter => state =>\r\n\tfilter\r\n\t\t? state.phoneBookReducer.items.filter(({ name }) =>\r\n\t\t\t\tname.toLowerCase().includes(filter.toLowerCase())\r\n\t\t  )\r\n\t\t: state.phoneBookReducer.items;\r\n\r\nexport const getIsContactExists = name => {\r\n\treturn state =>\r\n\t\t!!state.phoneBookReducer.items.find(contact => contact.name === name);\r\n};\r\n\r\nexport const getFilter = state => state.phoneBookReducer.filter;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport ContactItem from '../ContactItem/ContactItem';\r\nimport { useCallback } from 'react';\r\nimport { deleteContact } from '../../redux/phoneBook/phoneBookActions';\r\nimport { getContacts, getFilter } from '../../redux/phoneBook/selectors';\r\n\r\nconst ContactList = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst filter = useSelector(getFilter);\r\n\tconst contacts = useSelector(getContacts(filter));\r\n\r\n\tconst handleDelete = useCallback(\r\n\t\tid => dispatch(deleteContact(id)),\r\n\t\t[dispatch]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<ul>\r\n\t\t\t{contacts.map(contact => (\r\n\t\t\t\t<ContactItem\r\n\t\t\t\t\tkey={contact.id}\r\n\t\t\t\t\tcontact={contact}\r\n\t\t\t\t\tonDelete={handleDelete}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default ContactList;\r\n","import phoneBookTypes from './phoneBookTypes';\r\n\r\nexport const contactAdd = contact => ({\r\n\ttype: phoneBookTypes.ADD_CONTACT,\r\n\tpayload: contact,\r\n});\r\n\r\nexport const deleteContact = id => ({\r\n\ttype: phoneBookTypes.DELETE_CONTACT,\r\n\tpayload: id,\r\n});\r\n\r\nexport const filterContact = filter => ({\r\n\ttype: phoneBookTypes.FILTER_CONTACT,\r\n\tpayload: filter,\r\n});\r\n\r\nexport const loadContacts = contacts => ({\r\n\ttype: phoneBookTypes.LOAD_CONTACTS,\r\n\tpayload: contacts,\r\n});\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styles from './PhonebookEditor.module.css';\r\nimport * as actions from '../../redux/phoneBook/phoneBookActions';\r\nimport shortid from 'shortid';\r\nimport toastr from 'toastr';\r\nimport { getIsContactExists } from '../../redux/phoneBook/selectors';\r\n\r\n\r\nconst InputForm = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [name, setName] = useState('');\r\n\tconst [number, setNumber] = useState('');\r\n\tconst isExists = useSelector(getIsContactExists(name));\r\n\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\tif (isExists) {\r\n\t\t\ttoastr.warning(`Contact ${name} is already exists`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdispatch(\r\n\t\t\tactions.contactAdd({\r\n\t\t\t\tid: shortid.generate(),\r\n\t\t\t\tname,\r\n\t\t\t\tnumber,\r\n\t\t\t})\r\n\t\t);\r\n\t\tsetName('');\r\n\t\tsetNumber('');\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form className={styles.PhonebookEditor} onSubmit={handleSubmit}>\r\n\t\t\t\t<h2>Name</h2>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tname='name'\r\n\t\t\t\t\tvalue={name}\r\n\t\t\t\t\tonChange={e => setName(e.target.value)}\r\n\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n\t\t\t\t\ttitle=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<h2>Number</h2>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='tel'\r\n\t\t\t\t\tname='number'\r\n\t\t\t\t\tvalue={number}\r\n\t\t\t\t\tonChange={e => setNumber(e.target.value)}\r\n\t\t\t\t\tpattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\r\n\t\t\t\t\ttitle='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<button className={styles.PhonebookEditorButton} type='submit'>\r\n\t\t\t\t\tAdd contact\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default InputForm;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { filterContact } from '../../redux/phoneBook/phoneBookActions';\r\nimport { getFilter } from '../../redux/phoneBook/selectors';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst filter = useSelector(getFilter);\r\n\r\n\tconst handleChange = e => {\r\n\t\tdispatch(filterContact(e.target.value));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<label className={styles.filter}>\r\n\t\t\t<span>filter</span>\r\n\t\t\t<input\r\n\t\t\t\tclassName={styles.input}\r\n\t\t\t\ttype='text'\r\n\t\t\t\tplaceholder='Type to filter contacts'\r\n\t\t\t\tvalue={filter}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t></input>\r\n\t\t</label>\r\n\t);\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useEffect } from 'react';\r\nimport ContactList from './ContactList/ContactList';\r\nimport InputForm from './InputForm/InputForm';\r\nimport Filter from './Filter/Filter';\r\nimport { getContacts } from '../redux/phoneBook/selectors';\r\nimport { loadContacts } from '../redux/phoneBook/phoneBookActions';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst App = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst contacts = useSelector(getContacts());\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(loadContacts(JSON.parse(localStorage.getItem('contacts')) || []));\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem('contacts', JSON.stringify(contacts), [contacts]);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Phonebook</h1>\r\n\t\t\t<InputForm />\r\n\t\t\t<Filter />\r\n\t\t\t<ContactList />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import phoneBookTypes from './phoneBookTypes';\r\nimport { combineReducers } from 'redux';\r\nconst initialState = {\r\n\titems: [],\r\n\tfilter: '',\r\n};\r\n\r\nconst items = (state = initialState.items, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase phoneBookTypes.ADD_CONTACT:\r\n\t\t\treturn [...state, action.payload];\r\n\r\n\t\tcase phoneBookTypes.DELETE_CONTACT:\r\n\t\t\treturn state.filter(contact => contact.id !== action.payload);\r\n\t\tcase phoneBookTypes.LOAD_CONTACTS:\r\n\t\t\treturn action.payload;\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst filter = (state = initialState.filter, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase phoneBookTypes.FILTER_CONTACT:\r\n\t\t\treturn action.payload;\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { createStore, combineReducers } from 'redux';\r\nimport phoneBookReducer from './phoneBook/phoneBookReducer';\r\n\r\nexport default createStore(\r\n\tcombineReducers({\r\n\t\tphoneBookReducer,\r\n\t}),\r\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import reactDOM from 'react-dom';\r\nimport App from './Components/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport toastr from 'toastr';\r\nimport 'toastr/build/toastr.min.css';\r\n\r\ntoastr.options = {\r\n\tcloseButton: false,\r\n\tdebug: false,\r\n\tnewestOnTop: false,\r\n\tprogressBar: false,\r\n\tpositionClass: 'toast-top-right',\r\n\tpreventDuplicates: false,\r\n\tonclick: null,\r\n\tshowDuration: '300',\r\n\thideDuration: '1000',\r\n\ttimeOut: '5000',\r\n\textendedTimeOut: '1000',\r\n\tshowEasing: 'swing',\r\n\thideEasing: 'linear',\r\n\tshowMethod: 'fadeIn',\r\n\thideMethod: 'fadeOut',\r\n};\r\nreactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}